generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  displayName  String
  isAdmin      Boolean  @default(false)
  isBanned     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  resources Resource[]
  ratings   Rating[]
  favorites Favorite[]
}

model Resource {
  id          String   @id @default(uuid())
  title       String
  url         String
  description String
  type        String       // ✅ toegevoegd
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())

  ratings       Rating[]
  favorites     Favorite[]
  resourceTags  ResourceTag[]
  tags          Tag[] @relation("ResourceTags")
}

model Rating {
  id         String   @id @default(uuid())
  score      Int
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId String
  createdAt  DateTime @default(now())

  @@unique([userId, resourceId]) 
}


model Favorite {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId String
  createdAt  DateTime @default(now())

  @@unique([userId, resourceId]) // één favoriet per user-resource
}


model Tag {
  id           String        @id @default(uuid())
  name         String        @unique
  createdAt    DateTime      @default(now())
  resources    Resource[]    @relation("ResourceTags") // ← already present
  resourceTags ResourceTag[] // ← add this
}

model ResourceTag {
  id         String   @id @default(uuid())
  resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId String
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      String

  @@unique([resourceId, tagId])
}

model Ban {
  id        String   @id @default(uuid())
  email     String   @unique
  reason    String?
  createdAt DateTime @default(now())
}

enum ResourceType {
  video
  book
  article
  course
}
